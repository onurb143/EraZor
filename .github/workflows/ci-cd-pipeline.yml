name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Tjek kode ud
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Installer .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0

    # 4. Restore afhængigheder
    - name: Restore dependencies
      run: dotnet restore ./repos/WebKlient/WebKlient.csproj

    # 5. Byg projektet
    - name: Build project
      run: dotnet build --no-restore --configuration Release

    # 6. Kør Unit Tests
    - name: Run Unit Tests
      run: dotnet test --no-build --filter Category=Unit --configuration Release

  integration:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # 1. Tjek kode ud
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Installer .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0

    # 3. Kør Integration Tests
    - name: Run Integration Tests
      run: dotnet test --no-build --filter Category=Integration --configuration Release

  e2e:
    runs-on: ubuntu-latest
    needs: integration

    steps:
    # 1. Installer Newman
    - name: Install Newman
      run: npm install -g newman

    # 2. Kør Newman Tests
    - name: Run E2E Tests
      run: newman run ./Erazor.postman_collection.json -e ./Erazor.postman_environment.json

  deploy:
    runs-on: ubuntu-latest
    needs: e2e

    steps:
    # 1. Opsæt Docker Buildx
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 2. Log ind på Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 3. Build og deploy med Docker Compose
    - name: Deploy with Docker Compose
      run: |
        docker-compose pull
        docker-compose up -d --build
